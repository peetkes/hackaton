{
  "template": {
    "description": "Extraction Template for ow-bestand header",
    "context": "/ow-dc:owBestand/sl:standBestand/sl:inhoud",
    "collections": [
      {
        "collectionsAnd": [
          "/opera/document/ow-bestand",
          "/opera/options/opdrachtbestanden"
        ]
      }
    ],
    "pathNamespace": [
      {
        "prefix": "ow-dc",
        "namespaceUri": "http://www.geostandaarden.nl/imow/bestanden/deelbestand"
      },
      {
        "prefix": "sl",
        "namespaceUri": "http://www.geostandaarden.nl/bestanden-ow/standlevering-generiek"
      }
    ],
    "vars": [
      {
        "name": "rdf",
        "val": "'http://www.w3.org/1999/02/22-rdf-syntax-ns#'"
      },
      {
        "name": "rdfs",
        "val": "'http://www.w3.org/2000/01/rdf-schema#'"
      },
      {
        "name": "dc",
        "val": "'http://purl.org/dc/elements/1.1/'"
      },
      {
        "name": "lvbb",
        "val": "'http://koop.overheid.nl/ontology/lvbb/'"
      },
      {
        "name": "imow",
        "val": "'http://koop.overheid.nl/ontology/imow/'"
      },
      {
        "name": "bestandnaam",
        "val": "fn:tokenize(fn:base-uri(.),'/')[last()]"
      },
      {
        "name": "owId",
        "val": "sl:leveringsId/fn:string()"
      },
      {
        "name": "manifestLinkBestandId",
        "val": "xdmp:sha512($bestandnaam)"
      },
      {
        "name": "bestandId",
        "val": "xdmp:sha512(fn:base-uri(.))"
      }
    ],
    "triples": [
      {
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)"
        },
        "predicate": {
          "val": "sem:iri($dc || 'identifier')"
        },
        "object": {
          "val": "$imow || 'id/' || $owId"
        }
      },
      {
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)"
        },
        "predicate": {
          "val": "sem:iri($rdfs || 'label')"
        },
        "object": {
          "val": "$owId"
        }
      },
      {
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)"
        },
        "predicate": {
          "val": "sem:iri($imow || 'bestand')"
        },
        "object": {
          "val": "sem:iri($bestandId)"
        }
      },
      {
        "subject": {
          "val": "sem:iri($bestandId)"
        },
        "predicate": {
          "val": "sem:iri($dc || 'identifier')"
        },
        "object": {
          "val": "$bestandId"
        }
      },
      {
        "subject": {
          "val": "sem:iri($bestandId)"
        },
        "predicate": {
          "val": "sem:iri($rdfs || 'label')"
        },
        "object": {
          "val": "$bestandnaam"
        }
      },
      {
        "subject": {
          "val": "sem:iri($bestandId)"
        },
        "predicate": {
          "val": "sem:iri($rdf || 'type')"
        },
        "object": {
          "val": "sem:iri($imow || 'owBestand')"
        }
      },
      {
        "subject": {
          "val": "sem:iri($bestandId)"
        },
        "predicate": {
          "val": "sem:iri($imow || 'linkToManifestBestand')"
        },
        "object": {
          "val": "sem:iri($manifestLinkBestandId)"
        }
      }
    ],
    "templates": [
      {
        "description": "Extraction Template for objecttypen ow-bestand",
        "context": "sl:objectTypen/sl:objectType",
        "triples": [
          {
            "subject": {
              "val": "sem:iri($bestandId)"
            },
            "predicate": {
              "val": "sem:iri($imow || 'heeftObjectType')"
            },
            "object": {
              "val": "sem:iri($imow || fn:string(.))"
            }
          }
        ]
      }
    ]
  }
}