<export><workspace name="Hackaton-december"><query name="Query 1" focus="false" listorder="1" taborder="1" active="true" database="3444400608675009663" server="11241090501015656619" database-name="hackaton-content" server-name="hackaton" mode="xquery">xquery version "1.0-ml";

xdmp:document-get-metadata("/Bedrijf_categorie_2.gml")</query><query name="Query 2" focus="false" listorder="2" taborder="2" active="true" database="3444400608675009663" server="11241090501015656619" database-name="hackaton-content" server-name="hackaton" mode="xquery">xquery version "1.0-ml";
import module namespace tde = "http://marklogic.com/xdmp/tde" at "/MarkLogic/tde.xqy";
declare namespace ow-dc="http://www.geostandaarden.nl/imow/bestanden/deelbestand/v20190901";
declare namespace r="http://www.geostandaarden.nl/imow/regels/v20190901";
declare namespace ow="http://www.geostandaarden.nl/imow/owobject/v20190709" ;
declare namespace sl="http://www.geostandaarden.nl/bestanden-ow/standlevering-generiek/v20190301";
declare namespace rol="http://www.geostandaarden.nl/imow/regelsoplocatie/v20190901" ;

let $besluit-tde := xdmp:unquote(xdmp:filesystem-file("/data/standaard-stop/tdej/besluit.tdej"))
let $regeling-tde := xdmp:unquote(xdmp:filesystem-file("/data/standaard-stop/tdej/regeling.tdej"))
let $io-tde := xdmp:unquote(xdmp:filesystem-file("/data/standaard-stop/tdej/informatie-object.tdej"))
let $gml-tde := xdmp:unquote(xdmp:filesystem-file("/data/standaard-stop/tdej/gml-bestand.tdej"))
let $ow-tde := xdmp:unquote(xdmp:filesystem-file("/data/standaard-stop/tdej/ow-bestand.tdej"))
let $besluit := fn:doc("/akn_nl_bill_gm0037-3520-01.xml")/node()
let $io := fn:doc("/GIO001-Bedrijf_categorie_2.xml")/node()
let $gml := xdmp:document-properties("/Bedrijf_categorie_2.gml")
let $ow := fn:doc("/owRegeltekst-Gemeentestad.xml")
return (
  tde:validate($ow-tde),
  tde:node-data-extract($ow, $ow-tde)
)
</query><query name="Query 3" focus="true" listorder="3" taborder="3" active="true" database="3444400608675009663" server="11241090501015656619" database-name="hackaton-content" server-name="hackaton" mode="sparql">## query

describe &lt;http://www.geostandaarden.nl/imow/id/abc-20190221-0801&gt;</query><query name="Query 4" focus="false" listorder="4" taborder="4" active="true" database="3444400608675009663" server="11241090501015656619" database-name="hackaton-content" server-name="hackaton" mode="xquery">xquery version "1.0-ml";
let $akn := "/akn"

return (
  fn:replace($akn, "(/[^/]+/[^/]+/[^/]+/[^/]+/[^/]+/[^/]+)/.*", "$1"),
  fn:tokenize($akn,"/")[last()]
)</query><query name="Query 5" focus="false" listorder="5" taborder="5" active="true" database="4251467559767176687" server="11795951846129597549" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml"; 
let $doc :=binary{xs:hexBinary("AA")} 
let $_ := xdmp:document-insert("/test.bin",$doc,map:map()=&gt;map:with("collections","test"))
let $_ := xdmp:document-add-properties("/test.bin",&lt;updateDate&gt;{fn:current-date()}&lt;/updateDate&gt;)
return ()</query><query name="Query 6" focus="false" listorder="6" taborder="6" active="true" database="4251467559767176687" server="11795951846129597549" database-name="Documents" server-name="App-Services" mode="xquery">xquery version "1.0-ml"; 
import module namespace tde = "http://marklogic.com/xdmp/tde" 
        at "/MarkLogic/tde.xqy";
let $tde :=&lt;template xmlns="http://marklogic.com/xdmp/tde"&gt; 
  &lt;collections&gt;&lt;collection&gt;test&lt;/collection&gt;&lt;/collections&gt;
  &lt;context&gt;/prop:properties&lt;/context&gt;
  &lt;vars&gt;
      &lt;var&gt;
        &lt;name&gt;EX&lt;/name&gt;
        &lt;val&gt;"http://example.org/ex#"&lt;/val&gt;
      &lt;/var&gt;
    &lt;/vars&gt;
  &lt;invalid-values&gt;ignore&lt;/invalid-values&gt;
&lt;triples&gt;
     &lt;triple&gt;
      &lt;subject&gt;
        &lt;val&gt;sem:iri( $EX || "updatedAt" )&lt;/val&gt;
      &lt;/subject&gt;
      &lt;predicate&gt;
        &lt;val&gt;sem:iri( $EX || "is" )&lt;/val&gt;
      &lt;/predicate&gt;
      &lt;object&gt;
        &lt;val&gt;./updateDate/fn:string()&lt;/val&gt;
      &lt;/object&gt;
    &lt;/triple&gt;
   &lt;/triples&gt;
&lt;/template&gt;
let $binary := xdmp:document-properties("/test.bin")
return (
  tde:validate($tde),
  tde:node-data-extract($binary, $tde)
)
</query><query name="Query 7" focus="false" listorder="7" taborder="7" active="true" database="3444400608675009663" server="11241090501015656619" database-name="hackaton-content" server-name="hackaton" mode="javascript">'use strict';
const tde = require("/MarkLogic/tde.xqy");
let doc = xdmp.toJSON({
  "template": {
    "description": "Extraction Template for gml-bestand",
    "context": "/ow-dc:owBestand/sl:standBestand",
    "collections": [
      "/opera/document/ow-bestand"
    ],
    "pathNamespace": [{
      "prefix": "ga",
      "namespaceUri": "http://www.geostandaarden.nl/imow/gebiedsaanwijzing"
    },{
      "prefix": "g",
      "namespaceUri": "http://www.geostandaarden.nl/imow/geometrie"
    },{
      "prefix": "l",
      "namespaceUri": "http://www.geostandaarden.nl/imow/locatie"
    },{
      "prefix": "ow",
      "namespaceUri": "http://www.geostandaarden.nl/imow/owobject"
    },{
      "prefix": "ow-dc",
      "namespaceUri": "http://www.geostandaarden.nl/imow/bestanden/deelbestand"
    },{
      "prefix": "p",
      "namespaceUri": "http://www.geostandaarden.nl/imow/pons"
    },{
      "prefix": "r",
      "namespaceUri": "http://www.geostandaarden.nl/imow/regels1"
    },{
      "prefix": "rol",
      "namespaceUri": "http://www.geostandaarden.nl/imow/regelsoplocatie"
    },{
      "prefix": "sl",
      "namespaceUri": "http://www.geostandaarden.nl/bestanden-ow/standlevering-generiek"
    },{
      "prefix": "xlink",
      "namespaceUri": "http://www.w3.org/1999/xlink"
    }],
    "vars": [{
      "name": "lvbb",
      "val": "'http://koop.overheid.nl/ontology/lvbb/'"
    },{
      "name": "imow",
      "val": "'http://www.geostandaarden.nl/imow/'"
    },{
      "name": "owId",
      "val": "sl:inhoud/sl:leveringsId/fn:string()"
    },{
      "name": "gebied",
      "val": "sl:inhoud/sl:gebied/fn:string()"
    },{
      "name": "bestand",
      "val": "fn:base-uri(.)"
    }],
    "triples": [{
      "subject": {
        "val": "sem:iri($imow || 'id/' || $owId)",
        "invalidValues": "ignore"
      },
      "predicate": {
        "val": "sem:iri($imow || 'workId')"
      },
      "object": {
        "val": "$owId"
      }
    },{
      "subject": {
        "val": "sem:iri($imow || 'id/' || $owId)",
        "invalidValues": "ignore"
      },
      "predicate": {
        "val": "sem:iri($imow || 'bestand')"
      },
      "object": {
        "val": "$bestand"
      }
    }],
    "templates":[{
      "description": "Extraction Template for Activiteiten ow bestand",
      "context": "sl:stand/ow-dc:owObject/rol:Activiteit",
      "vars": [{
        "name": "activiteitId",
        "val": "rol:identificatie/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftActiviteit')"
        },
        "object": {
          "val": "sem:iri($activiteitId)"
        }
      },{
        "subject": {
          "val": "sem:iri($activiteitId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'regeltekst')"
        },
        "object": {
          "val": "sem:iri(@ow:regeltekstId/fn:string())"
        }
      }],
      "templates": [{
        "description": "Extraction Template for Activiteit locatieaanduiding",
        "context": "rol:locatieaanduiding/l-ref:LocatieRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($activiteitId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'locatieaanduidingId')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      },{
        "description": "Extraction Template for Activiteit bovenliggendeActiviteit",
        "context": "rol:bovenliggendeActiviteit/rol:ActiviteitRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($activiteitId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'bovenliggendeActiviteitId')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      }]
    },{
      "description": "Extraction Template for Gebiedsaanwijzing ow-bestand",
      "context": "sl:stand/ow-dc:owObject/ga:Gebiedsaanwijzing",
      "vars": [{
        "name": "gebiedsaanwijzingId",
        "val": "ga:identificatie/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftGebiedsaanwijzing')"
        },
        "object": {
          "val": "sem:iri($gebiedsaanwijzingId)"
        }
      },{
        "subject": {
          "val": "sem:iri($gebiedsaanwijzingId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'regeltekst')"
        },
        "object": {
          "val": "sem:iri(@ow:regeltekstId/fn:string())"
        }
      }],
      "templates": [{
        "description": "Extraction Template for Gebiedsaanwijzing locatieaanduiding",
        "context": "ga:locatieaanduiding/l:LocatieRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($gebiedsaanwijzingId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'locatieaanduidingId')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      }]
    },{
      "description": "Extraction Template for Gebied ow-bestand",
      "context": "sl:stand/ow-dc:owObject/l:Gebied",
      "vars": [{
        "name": "gebiedId",
        "val": "l:identificatie/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftGebied')"
        },
        "object": {
          "val": "sem:iri($gebiedId)"
        }
      },{
        "subject": {
          "val": "sem:iri($gebiedId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'regeltekst')"
        },
        "object": {
          "val": "sem:iri(@ow:regeltekstId/fn:string())"
        }
      }],
      "templates": [{
        "description": "Extraction Template for geometrie",
        "context": "l:geometrie/g:GeometrieRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($gebiedId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'geometrieId')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      }]
    },{
      "description": "Extraction Template for Omgevingswaarde ow-bestand",
      "context": "sl:stand/ow-dc:owObject/rol:Omgevingswaarde",
      "vars": [{
        "name": "omgevingswaardeId",
        "val": "rol:identificatie/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftOmgevingswaarde')"
        },
        "object": {
          "val": "sem:iri($omgevingswaardeId)"
        }
      },{
        "subject": {
          "val": "sem:iri($omgevingswaardeId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'regeltekstId')"
        },
        "object": {
          "val": "sem:iri(@ow:regeltekstId/fn:string())"
        }
      }],
      "templates": [{
        "description": "Extraction Template for Normwaarde locatieaanduiding",
        "context": "rol:normwaarde/rol:Normwaarde/rol:locatieaanduiding/l:LocatieRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($omgevingswaardeId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'locatieaanduiding')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      }]
    },{
      "description": "Extraction Template for Pons ow-bestand",
      "context": "sl:stand/ow-dc:owObject/p:Pons",
      "vars": [{
        "name": "ponsId",
        "val": "p:identificatie/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftPons')"
        },
        "object": {
          "val": "sem:iri($ponsId)"
        }
      },{
        "subject": {
          "val": "sem:iri($ponsId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'regeltekstId')"
        },
        "object": {
          "val": "sem:iri(@ow:regeltekstId/fn:string())"
        }
      }],
      "templates": [{
        "description": "Extraction Template for Pons locatieaanduiding",
        "context": "p:locatieaanduiding/l:LocatieRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($ponsId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'locatieaanduiding')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      }]
    },{
      "description": "Extraction Template for Regeltekst ow-bestand",
      "context": "sl:stand/ow-dc:owObject/r:Regeltekst",
      "vars": [{
        "name": "regeltekstId",
        "val": "r:identificatie/fn:string()"
      },{
        "name": "wIdRegeling",
        "val": "@wIdRegeling/fn:string()"
      },{
        "name": "wId",
        "val": "@wId/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftRegeltekst')"
        },
        "object": {
          "val": "sem:iri($regeltekstId)"
        }
      },{
        "subject": {
          "val": "sem:iri($regeltekstId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($lvbb || 'linkToRegeling')"
        },
        "object": {
          "val": "sem:iri(fn:concat($wIdRegeling))"
        }
      },{
        "subject": {
          "val": "sem:iri($regeltekstId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($lvbb || 'linkToWId')"
        },
        "object": {
          "val": "sem:iri(fn:concat($wId))"
        }
      }]
    },{
      "description": "Extraction Template for RegelVoorIedereen ow-bestand",
      "context": "sl:stand/ow-dc:owObject/r:RegelVoorIedereen",
      "vars": [{
        "name": "regeltekstId",
        "val": "@ow:regeltekstId/fn:string()"
      }],
      "triples": [{
        "subject": {
          "val": "sem:iri($imow || 'id/' || $owId)",
          "invalidValues": "ignore"
        },
        "predicate": {
          "val": "sem:iri($imow || 'heeftRegelVoorIedereen')"
        },
        "object": {
          "val": "sem:iri($regeltekstId)"
        }
      }],
      "templates": [{
        "description": "Extraction Template for RegelVoorIedereen locatieaanduiding",
        "context": "r:locatieaanduiding/l:LocatieRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($regeltekstId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'locatieaanduiding')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      },{
        "description": "Extraction Template for RegelVoorIedereen artikelOfLid",
        "context": "r:artikelOfLid/r:RegeltekstRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($regeltekstId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'artikelOfLid')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      },{
        "description": "Extraction Template for RegelVoorIedereen gebiedsaanwijzing",
        "context": "r:gebiedsaanwijzing/ga:GebiedsaanwijzingRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($regeltekstId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'gebiedsaanwijzing')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      },{
        "description": "Extraction Template for RegelVoorIedereen activiteitaanduiding",
        "context": "r:activiteitaanduiding/rol:ActiviteitRef",
        "triples": [{
          "subject": {
            "val": "sem:iri($regeltekstId)",
            "invalidValues": "ignore"
          },
          "predicate": {
            "val": "sem:iri($imow || 'activiteitaanduiding')"
          },
          "object": {
            "val": "sem:iri(@xlink:href/fn:string())"
          }
        }]
      }]
    }]
  }
});
tde.validate([doc])</query></workspace></export>
